<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.corp.jr.dao.generator.CoreFileDao">
  <resultMap id="BaseResultMap" type="com.corp.jr.model.generator.CoreFile">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PATH" jdbcType="VARCHAR" property="path" />
    <result column="BIZ_ID" jdbcType="VARCHAR" property="bizId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ORG_ID" jdbcType="INTEGER" property="orgId" />
    <result column="BIZ_TYPE" jdbcType="VARCHAR" property="bizType" />
    <result column="FILE_BATCH_ID" jdbcType="VARCHAR" property="fileBatchId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, `NAME`, `PATH`, BIZ_ID, USER_ID, CREATE_TIME, ORG_ID, BIZ_TYPE, FILE_BATCH_ID
  </sql>
  <select id="selectByExample" parameterType="com.corp.jr.model.generator.CoreFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from core_filezzz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from core_file
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from core_file
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.corp.jr.model.generator.CoreFileExample">
    delete from core_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.corp.jr.model.generator.CoreFile" useGeneratedKeys="true">
    insert into core_file (`NAME`, `PATH`, BIZ_ID, 
      USER_ID, CREATE_TIME, ORG_ID, 
      BIZ_TYPE, FILE_BATCH_ID)
    values (#{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{bizId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{orgId,jdbcType=INTEGER}, 
      #{bizType,jdbcType=VARCHAR}, #{fileBatchId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.corp.jr.model.generator.CoreFile" useGeneratedKeys="true">
    insert into core_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `NAME`,
      </if>
      <if test="path != null">
        `PATH`,
      </if>
      <if test="bizId != null">
        BIZ_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="orgId != null">
        ORG_ID,
      </if>
      <if test="bizType != null">
        BIZ_TYPE,
      </if>
      <if test="fileBatchId != null">
        FILE_BATCH_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="bizType != null">
        #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="fileBatchId != null">
        #{fileBatchId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.corp.jr.model.generator.CoreFileExample" resultType="java.lang.Long">
    select count(*) from core_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update core_file
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `NAME` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        `PATH` = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.bizId != null">
        BIZ_ID = #{record.bizId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orgId != null">
        ORG_ID = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.bizType != null">
        BIZ_TYPE = #{record.bizType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileBatchId != null">
        FILE_BATCH_ID = #{record.fileBatchId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update core_file
    set ID = #{record.id,jdbcType=INTEGER},
      `NAME` = #{record.name,jdbcType=VARCHAR},
      `PATH` = #{record.path,jdbcType=VARCHAR},
      BIZ_ID = #{record.bizId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      ORG_ID = #{record.orgId,jdbcType=INTEGER},
      BIZ_TYPE = #{record.bizType,jdbcType=VARCHAR},
      FILE_BATCH_ID = #{record.fileBatchId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.corp.jr.model.generator.CoreFile">
    update core_file
    <set>
      <if test="name != null">
        `NAME` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `PATH` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="bizId != null">
        BIZ_ID = #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        ORG_ID = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="bizType != null">
        BIZ_TYPE = #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="fileBatchId != null">
        FILE_BATCH_ID = #{fileBatchId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.corp.jr.model.generator.CoreFile">
    update core_file
    set `NAME` = #{name,jdbcType=VARCHAR},
      `PATH` = #{path,jdbcType=VARCHAR},
      BIZ_ID = #{bizId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      ORG_ID = #{orgId,jdbcType=INTEGER},
      BIZ_TYPE = #{bizType,jdbcType=VARCHAR},
      FILE_BATCH_ID = #{fileBatchId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>